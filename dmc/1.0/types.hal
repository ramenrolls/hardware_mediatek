/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.mediatek.hardware.dmc@1.0;

typedef int32_t SID;
typedef int8_t GID;

enum dmcResult_e : uint32_t {
    DMC_SUCCESS,
    DMC_FAILED,
    DMC_NOT_INITIALIZED,
    DMC_INVALID_ARGUMENTS,
    DMC_TIMEOUT
};

enum dmcCommand_e : uint32_t {
    DMC_CMD_START_REPORT_EVENT,
    DMC_CMD_STOP_REPORT_EVENT,
    DMC_CMD_SET_MAX_PAYLOAD_SIZE,
    DMC_CMD_SET_PACKET_TYPE
};

/**
 * Statics for event subscription.
 * totalEvents: Total number of events received.
 * droppedEvents: Number of events that were discarded.
 * eventBufferCapacity: The maximum buffer size allocated for events (in bytes)
 * eventBufferInUse: The current buffer capacity in use (in bytes)
 */
struct dmcSessionStats_t {
    int32_t totalEvents;
    int32_t droppedEvents;
    int32_t eventBufferCapacity;
    int32_t eventBufferInUse;
};

struct dmcSessionConfig_t {
    string identity;
    string version;
    bool decryptPacket;
};

struct dmcObjectId_t {
    GID group;
    uint32_t length;
    vec<uint32_t> ids;
};

struct dmcValue_t {
    uint32_t length;
    vec<uint8_t> data;
};
