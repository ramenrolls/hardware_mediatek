/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.mediatek.hardware.camera.security@1.0;

import android.hardware.camera.common@1.0::types;

/**
 * This HAL interface communicates asynchronous results from SecureCamera
 * in response to secure buffer callback
 */
interface ISecureCameraClientCallback {
    /**
     * Sent when secure camera produces a newly filled buffer and is ready to be consumed.
     *
     * @param status The status code for this operation. If not OK, then
     *     buffer and stride must not be used.
     * @param bufferId A unique ID for the returned buffer.
     * @return buffer A handle to the buffer to be read from.
     *     Must be non-null if the bufferId has not been seen by HAL before.
     *     Must be null if the bufferId is seen before.
     *     SecureCamera HAL client must keep track of the bufferId to actual buffer handle mapping.
     * @return stride The stride between two rows of pixels in this buffer.
     */
    oneway onBufferAvailable(Status status, uint64_t bufferId, handle buffer, Stream stream);
};
