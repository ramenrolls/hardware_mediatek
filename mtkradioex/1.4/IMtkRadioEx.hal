/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.mediatek.hardware.mtkradioex@1.4;

import vendor.mediatek.hardware.mtkradioex@1.3;
import ISmartRatSwitchRadioResponse;
import ISmartRatSwitchRadioIndication;

/**
 * This interface is used by telephony and telecom to talk to cellular radio.
 * All the functions have minimum one parameter:
 * serial: which corresponds to serial no. of request. Serial numbers must only be memorized for the
 * duration of a method call. If clients provide colliding serials (including passing the same
 * serial to different methods), multiple responses (one for each method call) must still be served.
 */
interface IMtkRadioEx extends @1.3::IMtkRadioEx{
    /**
      * Set response functions for telephony smart switch radio requests & radio indications.
      *
      * @param radioResponse Object containing response functions
      * @param radioIndication Object containing radio indications
      */
    setResponseFunctionsSmartRatSwitch(ISmartRatSwitchRadioResponse radioResponse,
            ISmartRatSwitchRadioIndication radioIndication);

    /*
     * Smart rat switch
     *
     * @param serial Serial number of request
     * @param index switch mode
     * @param index rat type
     */
    oneway smartRatSwitch(int32_t serial, int32_t mode, int32_t rat);

    /*
     * Get smart rat switch
     *
     * @param serial Serial number of request
     * @param index switch mode
     */
    oneway getSmartRatSwitch(int32_t serial, int32_t mode);

    /*
     * Set Smart Scene
     *
     * @param serial Serial number of request
     * @param mode switch mode
     * @param tGear Throughput Gear
     * @param lGear Latency Gear
     */
    oneway setSmartSceneSwitch(int32_t serial, int32_t mode, int32_t tGear, int32_t lGear);
};
